// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ECO3_Testing.FeatureFiles.UserPermission
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UsersPrivilegeFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "UsersPrivilege.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Users Privilege", null, ProgrammingLanguage.CSharp, new string[] {
                        "UsersPrivilege"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Users Privilege")))
            {
                global::ECO3_Testing.FeatureFiles.UserPermission.UsersPrivilegeFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenBasicUser(string user, string subHeader, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15449"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Errors screen (Basic User)", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("I navigate to the home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then(string.Format("I should not be able to see \"{0}\"", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Basic User): Basic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Basic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Basic")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenBasicUser_Basic()
        {
#line 5
this.PermissionsForViewMeasureProcessingErrorsScreenBasicUser("Basic", "Measure Processing", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenInternalAdminUser(string user, string subHeader, string sublink_1, string subLink_2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15449"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Errors screen (Internal Admin User)", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", sublink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
 testRunner.Then(string.Format("I should not be able to see the \'{0}\'", subLink_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Internal Admin User): Vari" +
            "ant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:sublink_1", "View Measure Processing Errors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Start Measure Processing for ECO2/t")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenInternalAdminUser_Variant0()
        {
#line 15
this.PermissionsForViewMeasureProcessingErrorsScreenInternalAdminUser("InternalAdmin", "Measure Processing", "View Measure Processing Errors", "Start Measure Processing for ECO2/t", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Internal Admin User): Vari" +
            "ant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:sublink_1", "View Measure Processing Errors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Start Measure Processing for ECO3")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenInternalAdminUser_Variant1()
        {
#line 15
this.PermissionsForViewMeasureProcessingErrorsScreenInternalAdminUser("InternalAdmin", "Measure Processing", "View Measure Processing Errors", "Start Measure Processing for ECO3", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenAdvancedUser(string user, string subHeader, string sublink_1, string subLink_2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15449"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Errors screen (Advanced User)", @__tags);
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", sublink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", subLink_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Advanced User): Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:sublink_1", "View Measure Processing Errors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Start Measure Processing for ECO2/t")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenAdvancedUser_Variant0()
        {
#line 27
this.PermissionsForViewMeasureProcessingErrorsScreenAdvancedUser("Advanced", "Measure Processing", "View Measure Processing Errors", "Start Measure Processing for ECO2/t", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Advanced User): Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:sublink_1", "View Measure Processing Errors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Start Measure Processing for ECO3")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenAdvancedUser_Variant1()
        {
#line 27
this.PermissionsForViewMeasureProcessingErrorsScreenAdvancedUser("Advanced", "Measure Processing", "View Measure Processing Errors", "Start Measure Processing for ECO3", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenStandardUser(string user, string subHeader, string sublink_1, string subLink_2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15449"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Errors screen (Standard User)", @__tags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", sublink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", subLink_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Standard User): Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:sublink_1", "View Measure Processing Errors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Start Measure Processing for ECO2/t")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenStandardUser_Variant0()
        {
#line 39
this.PermissionsForViewMeasureProcessingErrorsScreenStandardUser("Standard", "Measure Processing", "View Measure Processing Errors", "Start Measure Processing for ECO2/t", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Errors screen (Standard User): Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15449")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:sublink_1", "View Measure Processing Errors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Start Measure Processing for ECO3")]
        public virtual void PermissionsForViewMeasureProcessingErrorsScreenStandardUser_Variant1()
        {
#line 39
this.PermissionsForViewMeasureProcessingErrorsScreenStandardUser("Standard", "Measure Processing", "View Measure Processing Errors", "Start Measure Processing for ECO3", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForStartMeasureProcessingScreenStandardAdvancedUser(string user, string startProcessDeepLink, string user2, string page, string screenTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15450",
                    "15970"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for Start Measure Processing screen (Standard & Advanced User)", @__tags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.When(string.Format("I hit \'{0}\' deep link", startProcessDeepLink), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then(string.Format("I should be able to navigate to the \'{0}\'", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.When(string.Format("I log on successfully to internal website page as a \'{0}\'", user2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.And(string.Format("I hit \'{0}\' deep link", startProcessDeepLink), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.Then(string.Format("I should be able to navigate to the \'{0}\'", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.Then(string.Format("the screen title should be \'{0}\'", screenTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for Start Measure Processing screen (Standard & Advanced User): Varia" +
            "nt 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15450")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15970")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:startProcessDeepLink", "/MeasureProcessing/Start?ecoVersion=ECO2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user2", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:page", "Start Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:screenTitle", "Start Measure Processing for ECO2")]
        public virtual void PermissionsForStartMeasureProcessingScreenStandardAdvancedUser_Variant0()
        {
#line 52
this.PermissionsForStartMeasureProcessingScreenStandardAdvancedUser("Standard", "/MeasureProcessing/Start?ecoVersion=ECO2", "Advanced", "Start Measure Processing", "Start Measure Processing for ECO2", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for Start Measure Processing screen (Standard & Advanced User): Varia" +
            "nt 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15450")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15970")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:startProcessDeepLink", "/MeasureProcessing/Start?ecoVersion=ECO3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user2", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:page", "Start Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:screenTitle", "Start Measure Processing for ECO3")]
        public virtual void PermissionsForStartMeasureProcessingScreenStandardAdvancedUser_Variant1()
        {
#line 52
this.PermissionsForStartMeasureProcessingScreenStandardAdvancedUser("Standard", "/MeasureProcessing/Start?ecoVersion=ECO3", "Advanced", "Start Measure Processing", "Start Measure Processing for ECO3", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForUploadMeasureProcessingErrorFileScreenInternalAdminUser(string user, string subHeader, string subLink_2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15451"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for Upload Measure Processing Error File screen (Internal Admin User)" +
                    "", @__tags);
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then(string.Format("I should not be able to see the \'{0}\'", subLink_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for Upload Measure Processing Error File screen (Internal Admin User)" +
            ": InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15451")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "Upload Measure Processing Error File")]
        public virtual void PermissionsForUploadMeasureProcessingErrorFileScreenInternalAdminUser_InternalAdmin()
        {
#line 68
this.PermissionsForUploadMeasureProcessingErrorFileScreenInternalAdminUser("InternalAdmin", "Measure Processing", "Upload Measure Processing Error File", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForUploadMeasureProcessingErrorFileScreenAdvancedUser(string user, string subHeader, string subLink_1, string page, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15451"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for Upload Measure Processing Error File screen (Advanced User)", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
 testRunner.When(string.Format("I click on the \'{0}\'", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then(string.Format("I should be able to navigate to the \'{0}\'", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for Upload Measure Processing Error File screen (Advanced User): Adva" +
            "nced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15451")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_1", "Upload Measure Processing Error File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:page", "Upload Measure Processing Errors")]
        public virtual void PermissionsForUploadMeasureProcessingErrorFileScreenAdvancedUser_Advanced()
        {
#line 79
this.PermissionsForUploadMeasureProcessingErrorFileScreenAdvancedUser("Advanced", "Measure Processing", "Upload Measure Processing Error File", "Upload Measure Processing Errors", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForUploadMeasureProcessingErrorFileScreenStandardUser(string user, string subHeader, string subLink_1, string page, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15451"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for Upload Measure Processing Error File screen (Standard User)", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.When(string.Format("I click on the \'{0}\'", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then(string.Format("I should be able to navigate to the \'{0}\'", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
 testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for Upload Measure Processing Error File screen (Standard User): Stan" +
            "dard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15451")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_1", "Upload Measure Processing Error File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:page", "Upload Measure Processing Errors")]
        public virtual void PermissionsForUploadMeasureProcessingErrorFileScreenStandardUser_Standard()
        {
#line 91
this.PermissionsForUploadMeasureProcessingErrorFileScreenStandardUser("Standard", "Measure Processing", "Upload Measure Processing Error File", "Upload Measure Processing Errors", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorFilesScreenInternalAdminUser(string user, string subHeader, string subLink_2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15452"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Error Files screen (Internal Admin User)", @__tags);
#line 105
this.ScenarioSetup(scenarioInfo);
#line 106
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
 testRunner.Then(string.Format("I should not be able to see the \'{0}\'", subLink_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
    testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Error Files screen (Internal Admin User):" +
            " InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15452")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "InternalAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_2", "View Measure Processing Error Files")]
        public virtual void PermissionsForViewMeasureProcessingErrorFilesScreenInternalAdminUser_InternalAdmin()
        {
#line 105
this.PermissionsForViewMeasureProcessingErrorFilesScreenInternalAdminUser("InternalAdmin", "Measure Processing", "View Measure Processing Error Files", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorFilesScreenAdvancedUser(string user, string subHeader, string subLink_1, string page, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15452"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Error Files screen (Advanced User)", @__tags);
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 120
 testRunner.When(string.Format("I click on the \'{0}\'", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.Then(string.Format("I should be able to navigate to the \'{0}\'", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 122
    testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Error Files screen (Advanced User): Advan" +
            "ced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15452")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Advanced")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_1", "View Measure Processing Error Files")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:page", "Measure Processing Error Files")]
        public virtual void PermissionsForViewMeasureProcessingErrorFilesScreenAdvancedUser_Advanced()
        {
#line 116
this.PermissionsForViewMeasureProcessingErrorFilesScreenAdvancedUser("Advanced", "Measure Processing", "View Measure Processing Error Files", "Measure Processing Error Files", ((string[])(null)));
#line hidden
        }
        
        public virtual void PermissionsForViewMeasureProcessingErrorFilesScreenStandardUser(string user, string subHeader, string subLink_1, string page, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "15452"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Permissions for View Measure Processing Error Files screen (Standard User)", @__tags);
#line 128
this.ScenarioSetup(scenarioInfo);
#line 129
 testRunner.Given(string.Format("I am Logged on successfully on internal website page as a \'{0}\'", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 130
 testRunner.When(string.Format("I navigate to the \'{0}\'", subHeader), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.Then(string.Format("I should be able to see \'{0}\' link", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
 testRunner.When(string.Format("I click on the \'{0}\'", subLink_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.Then(string.Format("I should be able to navigate to the \'{0}\'", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
    testRunner.Then("I should be able to clear the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Permissions for View Measure Processing Error Files screen (Standard User): Stand" +
            "ard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Users Privilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UsersPrivilege")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("15452")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:user", "Standard")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subHeader", "Measure Processing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subLink_1", "View Measure Processing Error Files")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:page", "Measure Processing Error Files")]
        public virtual void PermissionsForViewMeasureProcessingErrorFilesScreenStandardUser_Standard()
        {
#line 128
this.PermissionsForViewMeasureProcessingErrorFilesScreenStandardUser("Standard", "Measure Processing", "View Measure Processing Error Files", "Measure Processing Error Files", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
